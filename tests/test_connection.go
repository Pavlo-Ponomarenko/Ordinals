package tests

import (
	"github.com/btcsuite/btcd/btcutil"
	"github.com/btcsuite/btcd/rpcclient"
	"io/ioutil"
	"log"
	"path/filepath"
)

func main() {
	// Load the certificate for the TLS connection which is automatically
	// generated by btcd when it starts the RPC server and doesn't already
	// have one.
	btcdHomeDir := btcutil.AppDataDir("btcd", false)
	certs, err := ioutil.ReadFile(filepath.Join(btcdHomeDir, "rpc.cert"))
	if err != nil {
		log.Fatal(err)
	}

	// Create a new RPC client using websockets.  Since this example is
	// not long-lived, the connection will be closed as soon as the program
	// exits.
	connCfg := &rpcclient.ConnConfig{
		Host:         "localhost:18334",
		Endpoint:     "ws",
		User:         "user",
		Pass:         "12345",
		Certificates: certs,
	}
	client, err := rpcclient.New(connCfg, nil)
	if err != nil {
		log.Fatal(err)
	}
	//hash, _ := chainhash.NewHashFromStr("248c9d1af974d50051760fdc296661ac1445f54b0e3a25280cb27ba6225bbb6c")
	//fmt.Println(out)
	defer client.Shutdown()
	//commitTx, revealTx, err := mint.FormTransactions("text", "Hello!", chaincfg.TestNet3Params)
	//fmt.Println(commitTx)
	//fmt.Println(revealTx)
	//fmt.Println(err)
}
