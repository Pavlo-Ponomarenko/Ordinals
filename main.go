package main

import (
	"fmt"
	"github.com/btcsuite/btcd/chaincfg"
	"ordinals/internal/mint"
)

func main() {
	// Load the certificate for the TLS connection which is automatically
	// generated by btcd when it starts the RPC server and doesn't already
	// have one.
	//btcdHomeDir := btcutil.AppDataDir("btcd", false)
	//certs, err := ioutil.ReadFile(filepath.Join(btcdHomeDir, "rpc.cert"))
	//if err != nil {
	//	log.Fatal(err)
	//}
	//
	//// Create a new RPC client using websockets.  Since this example is
	//// not long-lived, the connection will be closed as soon as the program
	//// exits.
	//connCfg := &rpcclient.ConnConfig{
	//	Host:         "localhost:18334",
	//	Endpoint:     "ws",
	//	User:         "user",
	//	Pass:         "12345",
	//	Certificates: certs,
	//}
	//client, err := rpcclient.New(connCfg, nil)
	//if err != nil {
	//	log.Fatal(err)
	//}
	//defer client.Shutdown()
	commitTx, revealTx, err := mint.FormTransactions("text", "Hello!", chaincfg.TestNet3Params)
	fmt.Println(commitTx)
	fmt.Println(revealTx)
	fmt.Println(err)
}
